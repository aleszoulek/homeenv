#!/bin/zsh

autoload colors
colors

# ----------------------------------------------------------------------
# The following implements a caching mechanism for hg information.
# The RPROMPT executes get_hg_bprompt_info() and include the output...
#
#   setopt prompt_subst
#   RPROMPT="$(get_hg_prompt_info)"
#
__ZSH_HG_DIR=
__ZSH_HG_BRANCH=
__ZSH_HG_STATE=
__ZSH_HG_TS=0
__ZSH_HG_VARS_INVALID=1

# get the name of the branch we are on
parse_hg_branch() {
        #hg branch 2>/dev/null
}

new_parse_hg_branch() {
    local force=$1

    local branch

    branch=$(hg branch 2>/dev/null)

    __ZSH_HG_BRANCH="$branch"

}


zsh_hg_invalidate_vars() {
        __ZSH_HG_VARS_INVALID=1
}
zsh_hg_compute_vars() {
        new_parse_hg_branch $1
        __ZSH_HG_VARS_INVALID=0
}

# on each chdir update the cached hg variable(s)
#preexec_functions+='zsh_hg_preexec_update_vars'
#chpwd_functions+='zsh_hg_chpwd_update_vars'

zsh_hg_chpwd_update_vars() {
        zsh_hg_compute_vars 1
}
zsh_hg_preexec_update_vars() {
#        zsh_hg_compute_vars 1
}

# this function returns the current hg branch
# it takes as argument a string with printf like arguments:
#   '%P'     path to top of repository
#   '%p'     path to top of repository, with s/$HOME/~/
#   '%b'     current branch
#   '%s'     state of rebase/merge/bisect/am
#   '%%'     a '%' character
# providing no arguments is equivalent to "%p %b %s".
get_hg_prompt_info() {
        zsh_hg_compute_vars $__ZSH_HG_VARS_INVALID
        [[ -n "$__ZSH_HG_BRANCH" ]] || return

        local def fmt res
        def='%p %b %s'
        fmt=$@
        res=${fmt:-$def}
        res=${res//\%b/$__ZSH_HG_BRANCH }

        echo -n "${res}"
}

# call it the first time
#zsh_hg_compute_vars

